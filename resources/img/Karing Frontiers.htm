<!DOCTYPE html>
<!-- saved from url=(0022)http://127.0.0.1:5500/ -->
<html lang="en" class="hydrated"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<style data-styles="">ion-icon{visibility:hidden}.hydrated{visibility:inherit}</style>
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		
		
		
		
		<script src="./Karing Frontiers_files/ionicons.js"></script><script type="module" src="./Karing Frontiers_files/ionicons.esm.js" data-stencil-namespace="ionicons"></script><script nomodule="" src="./Karing Frontiers_files/ionicons(1).js" data-stencil-namespace="ionicons"></script>

		<title>Karing Frontiers</title>
	<script data-dapp-detection="">
(function() {
  let alreadyInsertedMetaTag = false

  function __insertDappDetected() {
    if (!alreadyInsertedMetaTag) {
      const meta = document.createElement('meta')
      meta.name = 'dapp-detected'
      document.head.appendChild(meta)
      alreadyInsertedMetaTag = true
    }
  }

  if (window.hasOwnProperty('web3')) {
    // Note a closure can't be used for this var because some sites like
    // www.wnyc.org do a second script execution via eval for some reason.
    window.__disableDappDetectionInsertion = true
    // Likely oldWeb3 is undefined and it has a property only because
    // we defined it. Some sites like wnyc.org are evaling all scripts
    // that exist again, so this is protection against multiple calls.
    if (window.web3 === undefined) {
      return
    }
    __insertDappDetected()
  } else {
    var oldWeb3 = window.web3
    Object.defineProperty(window, 'web3', {
      configurable: true,
      set: function (val) {
        if (!window.__disableDappDetectionInsertion)
          __insertDappDetected()
        oldWeb3 = val
      },
      get: function () {
        if (!window.__disableDappDetectionInsertion)
          __insertDappDetected()
        return oldWeb3
      }
    })
  }
})()</script><link rel="stylesheet" href="./Karing Frontiers_files/simple-grid.css"><link rel="stylesheet" href="./Karing Frontiers_files/style.css"><link rel="icon" href="http://127.0.0.1:5500/resources/icon.svg"><link href="./Karing Frontiers_files/css2" rel="stylesheet"></head>
	<body>
		<header id="navbar">
			<div class="container">
				<nav>
					<div class="menu-icons">
						<i class="icon ion-md-menu"></i>
						<i class="icon ion-md-close"></i>
					</div>
					<a href="http://127.0.0.1:5500/index.html">
						<div class="logo-container">
							<img src="./Karing Frontiers_files/logo20colour.svg">
						</div>
					</a>
					<ul class="nav-list">
						<li>
							<a class="normal-nav _current_" href="http://127.0.0.1:5500/index.html">Home</a>
						</li>

						<li>
							<a href="http://127.0.0.1:5500/#" class="normal-nav">Coaching in Organisations
								<i class="icon ion-md-arrow-dropdown"></i></a>
							<ul class="sub-menu">
								<li>
									<a class="normal-nav" href="http://127.0.0.1:5500/#">Organisational Development</a>
								</li>
								<li>
									<a class="normal-nav" href="http://127.0.0.1:5500/#">Systematic Team Coaching</a>
								</li>
								<li>
									<a class="normal-nav" href="http://127.0.0.1:5500/#">Executive Coaching</a>
								</li>
							</ul>
						</li>

						<li class="move-right nav-button">
							<a class="btn" href="http://127.0.0.1:5500/#">Contact</a>
						</li>
					</ul>
				</nav>
			</div>
		</header>
	<!-- Code injected by live-server -->
<script type="text/javascript">
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>

</body></html>